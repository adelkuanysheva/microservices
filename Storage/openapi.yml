openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: localhost
    url: http://localhost:8080
info:
  description: This API receives reading events from a Bike Trainer and Heart Rate Monitor devices
  version: "1.0.0"
  title: Ride Data Statistics
  contact:
    email: akuanysheva@my.bcit.ca
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: devices
    description: Ride Data
paths:
  /ride:
    # post:
    #   tags:
    #     - Ride data readings
    #   summary: Reports the statistics as a user is riding the application
    #   operationId: app.ride
    #   description: Adds ride data to the system
    #   responses:
    #     '201':
    #       description: item created
    #     '400':
    #       description: 'invalid input, object invalid'
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/rideEvent'
    #     description: Inventory item to add
    get: 
      tags: 
        - devices
      summary: gets new ride data readings
      operationId:  app.get_ride
      description: Gets ride data added after a timestamp 
      parameters: 
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: '2016-08-29T09:12:33Z'
      responses:
        '200':
          description: Successfully returned a list of ride data readings
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rideEvent'
        '400':
          description: Invalid request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
  /heartrate:
    # post:
    #     tags:
    #       - heart rate readings
    #     summary: Reports a heart rate statistics
    #     operationId: app.heartrate
    #     description: Adds a heart rate readings to the system
    #     responses:
    #       '201':
    #         description: item created
    #       '400':
    #         description: 'invalid input, object invalid'
    #     requestBody:
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/hrEvent'
    #       description: Inventory item to add
    get: 
      tags: 
        - devices
      summary: gets new heartrate data readings
      operationId:  app.get_heartrate
      description: Gets heartrate data added after a timestamp 
      parameters: 
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: '2019-08-29T09:12:33Z'
      responses:
        '200':
          description: Successfully returned a list of heartrate data readings
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hrEvent'
        '400':
          description: Invalid request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          
components:
  schemas:
    rideEvent:
      required:
        - ride_id
        - user_id
        - movie
        - timestamp
        - avg_speed #km/h
        - avg_power #watts/h
        - distance #km 
        - traceID
      properties:
        ride_id:
          type: integer
          example: 3
        user_id:
          type: string
          example: "A01258780"
        movie:
          type: string
          example: "John Wick 3"
        timestamp:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33Z'
        avg_speed:
          type: integer
          example: 20
        avg_power: 
          type: integer
          example: 180
        distance: 
          type: integer
          example: 13
        traceID:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
    hrEvent:
      type: object
      required:
        - ride_id # relates to ride data  event
        - user_id # relates to ride data event
        - device_id # unique
        - heart_rate # unique
        - max_hr # unique (at specific time)
        - min_hr # unique (at specific time)
        - timestamp #relates to ride data  event
        - traceID
      properties:
        ride_id:
          type: integer
          example: 3
        user_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        device_id:
          type: string
          example: WSD023
        heart_rate:
          type: integer
          example: 65
        max_hr:
          type: integer
          example: 100
        min_hr:
          type: integer
          example: 40
        timestamp:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33Z'
        traceID:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851

    # get_ride:
    #   title: ride 
    #   description: ride get request
    #   properties:
    #     timestamp:
    #       type: string
    #       format: date-time
    #       example: '2016-08-29T09:12:33Z'
    # get_heartrate:
    #   title: heartrate
    #   description: get heartrate 
    #   properties:
    #     timestamp:
    #       type: string
    #       format: date-time
    #       example: '2016-08-29T09:12:33Z'